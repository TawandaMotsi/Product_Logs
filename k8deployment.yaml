apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgdata-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16
          env:
            - name: POSTGRES_USER
              value: myuser
            - name: POSTGRES_PASSWORD
              value: mypassword
            - name: POSTGRES_DB
              value: mydb
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: pgdata-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: app
spec:
  selector:
    app: products-logs-app
  ports:
    - port: 8080
      targetPort: 8080
  type: NodePort

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: products-logs-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: products-logs-app
  template:
    metadata:
      labels:
        app: products-logs-app
    spec:
      containers:
        - name: products-logs-app
          image: docker.io/library/products_logs-app:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres:5432/mydb
            - name: SPRING_DATASOURCE_USERNAME
              value: myuser
            - name: SPRING_DATASOURCE_PASSWORD
              value: mypassword
          ports:
            - containerPort: 8080
